<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Wolfe准则 on</title><link>https://glossary.jiefengzhou.com/tags/Wolfe%E5%87%86%E5%88%99/</link><description>Recent content in Wolfe准则 on</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 01 Dec 2022 10:02:10 +0000</lastBuildDate><atom:link href="https://glossary.jiefengzhou.com/tags/Wolfe%E5%87%86%E5%88%99/index.xml" rel="self" type="application/rss+xml"/><item><title>02-线搜索</title><link>https://glossary.jiefengzhou.com/term/optimized-algorithm/02-%E7%BA%BF%E6%90%9C%E7%B4%A2/</link><pubDate>Thu, 01 Dec 2022 10:02:10 +0000</pubDate><guid>https://glossary.jiefengzhou.com/term/optimized-algorithm/02-%E7%BA%BF%E6%90%9C%E7%B4%A2/</guid><description>本章主要解决一元优化问题： $$ minimize \ f(\boldsymbol{x}) \qquad subject \ to \ \boldsymbol{x} \in \Omega$$ 目标函数为一元单值函数 $\boldsymbol{f} : \mathbb{R} \rightarrow \mathbb{R}$
迭代算法：从初始搜索点出发，产生一个迭代序列，不断逼近极值点。 黄金分割法 原理： 按黄金分割比把区间分两份（在原区间插入两点，插入点到左右端点距离相同） 在两个个区间$[a_0, a_1], [b_1, b_0]$ 中比较插入处函数值大小，后去掉一个不符合条件的区间 在剩下的一个区间里再次插入一个点 重复上述操作，直到收敛 函数实例 黄金分割法改进-斐波那契数列法 改进示意图 区间压缩率： 斐波那契数列法的总压缩比为 $$\left(1-\rho_1\right)\left(1-\rho_2\right) \cdots\left(1-\rho_N\right)=\frac{F_N}{F_{N+1}} \frac{F_{N-1}}{F_N} \cdots \frac{F_1}{F_2}=\frac{F_1}{F_{N+1}}=\frac{1}{F_{N+1}}$$ 由于该方法使用的最优参数序列 $\rho_1, \rho_2, \cdots$, 因此, 总压缩比比黄金分割法要小。 该迭代方法的最后一次迭代参数为1/2， 为避免这一问题，可以令最后一次的迭代参数为 $\rho_N = 1/2- \varepsilon$ 。</description></item></channel></rss>