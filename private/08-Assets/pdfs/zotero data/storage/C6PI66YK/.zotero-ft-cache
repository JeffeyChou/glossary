N I L IKANSACIIONSO N S ’ I S T E M S , MAN, AND CYBERNETICS, V O L 18, NO 1, JANUARY/FEDRUARY 1988

183

and executes iterations until the maximal implication chain length has been spanned. It prints out all initial and final fuzzy truth values.
REFERENCES
T. Agerwala. “Putting Petri nets to work,” I E E E Conipurer, pp. 85-94, Dec. 1970. H Atabakhche. D. Barbalho, R. Valette, and M. Courvoisier, “From Petri net based PLC’s to knowledge based control,” in Proc. IECON’86, Jan. 1986, pp. X17-822 D. J. Burr, ”A neural network digital recognizer,” in Proc. 1986 Con/. Swr Muri Cj,herii..Atlanta, GA. Aug. 1986, vol. 2, pp. 1621-1625. G. Carpenter and S. Grossberg. “A massively parallel architecture for a self-organizing neural pattern recognition machine,” Comput. Vision, Graphics, Iinuge Processing, vol. 31, pp. 54-115, Jan. 1987.
. R. R. Chines and M. L. Shaw, “From fuzzy logic to expert systems,
Itdorm Sci vol. 36, pp. 5-15. 1985. A W. Holt and F. Commoner, Euents and Conditioii. New York: Applied Data Research. 1970: also in Rec. Project MAC Con/. Concurrenr Sysr. and Parallel Coniputurion. New York: ACM, 1970, pp. 1-52. J . Hopfield, ‘*Neural networks and physical systems with emergent collective computational abilities.” Proc. Nut. Acud. Sci. USA. vol. 79, pp. 2554-2558. 1982. C CI Looney and A. R. Alfize, “Logical controls via Boolean rule matrix translormations.” IEEE Truns. Svst. Man Cvherii.. vol. 17.no. 6. Nov /Dec. 1987. C. G. Looney.. “Ex.pert control design with fuzzy rule matrices, Int. J . E.rperr Swt.: Rec.. Appl., in press. J . L. Peterson. Petri Nets, T h e q and the Modelling of Systems. Englewood Cliff,, NJ: Prentice-Hall, 1981. C. A. Petri, ‘‘ Kommunikation mit Automaten,” Schnften des RheinishWehtfalischen Institutes Cur Instrumentelle Mathematik an der Univcrstit Bonn, Heft 2, Bonn, W. Germany, 1962. M. Sugeno. “An introductory survey of fuzzy control,” Inform. Sci., vol. 36. pp. 59-83, 1985. D. Tahak, “Petri net representation of decision models,” IEEE Trans. ,S.vsr. Muri Ci.hern.. vol SMC-15, no. 6, pp. 812-818, Nov./Dec. 1985. M. G. Thomason, “Convergence of powers of a fuzzy matrix,” J . Math. Atiul. Appl.. vol 57, pp. 476-480, 1977. J. Warfleld. “Binary matrices in system modelling,” I E E E Trans. S-vst. Mu11 Cyherri., vol. SCM-3. no. 5 , pp. 441-449, Sept. 1973. M. D. Zisman. “Use of production systems for modelling asynchronous, concurren t processes.” in Pattern Directed In/erence Systems, D. A. Waterman and F. Hayes-Roth, Eds. New York: Academic, 1978, pp. 53-hX
On Ordered Weighted Averaging Aggregation Operators in Multicriteria Decisionmaking
RONALD R. YAGER

two extreme cases lead to the use of “and” and “or” operators to combine the criteria functions.
Our purpose in this paper is to introduce a new family of operators called ordered weighted averaging (OWA) operators that provide an aggregation which lies in between these two extremes. The name “orand” operator may be more appropriate. We shall see the simple mean is a special case of this new operator. We should carefully point out this operator is different than the classical weighted average in that coefficients are not associated directly with a particular attribute but rather to an ordered position. We shall further see that the structure of these operators are very much in the spirit of combining the criteria under the guidance of a quantifier. That is, the requirement that “most” of the criteria be satisfied corresponds to one of these OWA operators. We can see this work very much in the spirit of [l], [2] where Yager discusses an alternative approach to these aggregation processes.
FORMULATOINF GTHE AGGREGATIOPNROBLEM
Assume A , , A , , . . . , A n are n criteria of concern in a multi-
criteria problem. Let X be some proposed alternative. For each criteria, A,, A, (x)E [0,1] indicates the degree to which x satisfies that criteria. We shall use I to indicate the unit interval, thus A , (x)E I . Our central interest is the problem of formulating an overall decision function D such that for any alternative x, D ( x ) E I indicates the degree to which x meets our desired requirements with respect to the criteria.
The problem becomes that of formulating a function D from the constituent individual criteria functions
The structure of F should be such that the following conditions are met.
1) As our satisfaction in the individual alternative increases the overall satisfaction should increase; if A,(x) 2 A , ( y ) for all J
then D ( x ) > D ( y ) . We call this a monotonicity property or
positive association of individual criteria with aggregate preferences.
2) The equality of importance of the different criteria means that F should be symmetric with respect to the criteria. More
specifically, if a,, . . . ,a,, is a collection of numbers in the unit
interval than any one to one association of these numbers with
the A, ( x ) ’ s will result in the same value for D(x), that is if n = 3

Ahsirucf -We are primarilj concerned with the problem of aggregating multicriteria to form an overall decision function. We introduce a new type of operator for aggregation called an ordered weighted aggregation (OWA) operator. We investigate the properties of this operator. We particularly \ee that it has the propetq of lying between the “and,” requiring all the criteria to be satisfied, and the “or,” requiring at least one of the criteria to be satisfied. We see these new OWA operators as some new family of mean operators.
INTRODUCTION
The problem of aggregating criteria functions to form overall decision functions is of considerable importance in many disciplines. A primary factor in the determination of the structure of such aggregation functions is the relationship between the criteria involved. At one extreme is the situation in which we desire that all the criteria be satisfied. At the other extreme is the case in which the satisfaction of any of the criteria is all we desire. These
Manuscript received June 1. 1987: revised September 28, 1987. The author is with the Machine Intelligence Institute, Iona College, New Rochelle, NY lOXO1. IEEE Log Number X718791.

More formally recalling that a bag [3] is a set like object which allows duplication but pays no attention to ordering then
where we use ( and ) to denote a bag. We shall call this property symmetry or generalized commutativity.
Another consideration that we must be concerned with in formulating is the interrelationship between the criteria which we desire to model.
At one extreme is the situation in which we desire that an alternative satisfy “all” the criteria. In this case we see that x
must satisfy A , and A , and A , , . . . , and A , . Thus the require-
ment that all the conditions be satisfied is manifested by an “anding” of the criteria values.
At the other extreme is the situation in which we desire that an alternative satisfy “at least one of the criteria.” In this case we
desired that x satisfy A , or A , or A , , . . . , or A,,. Thus the
requirement that at least one of the criteria be satisfied is manifested by an “oring” of the criteria values in the formulation of the decision function.

001S-9472/88/0100-0183$01.00 01988 IEEE

Authorized licensed use limited to: University of Electronic Science and Tech of China. Downloaded on May 15,2023 at 04:42:58 UTC from IEEE Xplore. Restrictions apply.

184

IEEE TRANSACTIONS ON SYSTEMS, MAN, AND CYBERNETICS,VOL 18, NO 1. JAN[ A R Y / F E H K I ~ A R Y 19x8

In many cases the interrelationship between the criteria lies somewhere between these two extreme cases of wanting “all” or “at least one.” That is, we desire that “most” or “many” or “at least half” or “more than four” of the criteria are satisfied. It is our purpose here to obtain a general functional form of this type of situation.
GENERA“LANDING” AND “ORING” OPERATORS
There exists a class of operators called t-norms [4]-[6] that provide way of quantitatively implementing the type of “anding” aggregation implied by the “all” requirement. A closely related class of operators, called co-t-norms, provide a way of implementing the type “oring” operating previously discussed. In this section we briefly discuss these operators and point out some properties relevant to our discussion.
A t-norm T is a mapping
T : [0,1] x[O,l] + [ O , l ]
such that
1) T ( a ,b ) = T(b , a ) “commutative”,
2) T(a, b ) 2 T(c, d ) if a > c and b > d monotonic,
3) T(a , T(b, c ) ) = T(T(a , b),c ) “associative”, 4) T(1, a ) = a .
Among these operators that satisfy the property of being a t-norm are
1) T ( a ,6 ) = Min(a, b ) , 2) T ( a , b ) = a . b , 3) T ( a , b ) = l - M i n ( l , ( ( l - a ) P + ( l - b ) P ) l / P f)or P a 1 [7].
Bonnisone [8] among others has looked with considerable detail into the empirical properties of t-norm operators.
We should note that while the t-norms were defined in terms of binary operators they were extendible, via their associative property, to combining any number of values in the unit interval. Thus if the relationship between the criteria is an “anding” then
D(x) = T(A,(x), 4 ( x ) , . ..J “ ( X “ ) )
where T is some t-norm operator. The issue of selection of the appropriate t-norm in a given situation is one discussed by Bonnisone [8] and Yager [9].
An important property of the t-norm operator is stated in the following theorem.
Theorem: Assume T is any t-norm operator; then for any a and b
T ( a , b )<Min(a,b).
Proof: Without loss of generality assume Min(a, b ) = b. Since
T(1, b ) = b
and for any a , a gl;then
T ( a , h ) <T(l,b)g b g M i n ( a , b ) .
An implication of this theorem is that the t-norm Min provides the largest of these class of operators. We note that it is easy to
show that for any collection a,, a 2,. .-,a ,
~ ( a ,.,. . ,a,,) G Min( a,, . .. ,a,,).
This result implies that in multicriteria decisionmaking the use of an “anding” allows for no compensation for one bad satisfaction. Another interesting and unique property of the Min operator is that it is the only T norm-operator such that for all a E I
T(a,a) = a
We say it has the idempotency property. We should point out that the conditions one, two, and three of the defining definition of t-norms essentially provide the satisfaction to requirements I

& 11, symmetry (generalized commutativity) and monotonicity required of aggregation operators. We note that i t is condition 4. T(1,a) = a, that essentially stipulates t h s as an “anding” operator by requiring a form of “allness” satisfied by a t-norm.
A co-t-norm S is a mapping

such that

S: [0,1] X[O,l] + [0,1]

1) S ( a ,b) = S(b , a ) “commutative” 2) S ( a , b ) 2 S( c , d ) if a 2 c and b 2 d monotonic, 3) T ( a ,T ( b ,c)) = T ( T ( a ,b), c) “associative”, 4) T(0,a ) = a , “ a t least oneness.”
Among those operators that satisfy the property of being a co-t-norm are

+ 1) S ( a , b ) = M a x ( a , b ) ,
2) S ( a , b ) = a b - a . b,
3) S ( a , b ) = Min[l, u p+ b P ) l / pf]or p 2 1 [7].

Thus if the relationship between the criteria is a pure “oring,” then
.I) D ( x ) = S(A,(x) 9 A , ( 3 . . .I A,(
where S is some co-t-norm. An important property for these co-t-norms is
Theorem: Assume S is any co-t-norm operator: then for any II and b,
S(a,b)>Max(a,b).
An implication of this theorem is that the Max provides the smallest of these class of operators. It can be shown that for any collection a,,. . .,a,,
S ( a * ; . .,a,,) 3 Max( a , , . . .,a,,).
This implies that in multicriteria decisionmaking the use of a pure “oring” allows for no distraction from one good satisfaction. We should also point out that Max is the only co-t-norm having the idempotency property, for all a E I ,
S(a,a) =a.
Again it should be noted that it is condition 4 that makes this an “or” operation by implementing an “at least one” type of condition. Conditions 1,2, and 3 again just enforce the symmetry and monotonicity conditions.

OWA OPERATORS
In many cases of formulation of multiple criteria decision functions the type of aggregation implicitly desired by a decision maker is neither the pure “anding” of the t-norm with its complete lack of compensation nor the pure “oring” of the S operator with its complete submission to any good satisfaction as well as its indifference to the individual criteria. In many cases the type of aggregation operator desired lies somewhere between these two extremes. In this section, we shall introduce a new type of operator that we shall call an ordered weight averaging (OWA) operator. We shall see that this new aggregation operator allows us to easily adjust the degree of “anding” and “oring” implicit in the aggregation. As we shall see, a more descriptive name for this operator may be an “orand” operator because of its acting like a combination of the two.
Definition: A mapping F from
I“ + I (where I = [ O , l ] )
is called an OWA operator of dimension n if associated with F.
j ! is a weighting vector W, w=[

Authorized licensed use limited to: University of Electronic Science and Tech of China. Downloaded on May 15,2023 at 04:42:58 UTC from IEEE Xplore. Restrictions apply.

ILLL IFXNSACTIONS ON SYSTEMS, MAN, AND CYBERNETICS, VOL1.8, NO. 1,JANUARY/FEBRUARY 1988

185

such that

PROPERTIEOSF OWA OPERATORS

1) w, E
2) X , w , = l

In this section we shall investigate some of the properties of these new operators. We first recall that in our discussion of aggregation operators we required two fundamental properties

and where

that any aggregation operator must satisfy.

F( a1 ,a 2 , . ,a,,) = W,b, + W2b, + . . b,,

Our first theorem shows that these OWA operators are monotonic with respect to argument values.

where b, is the th largest element in the collection a,, a,; . ., u , ~ . Theorem: Assume F is an OWA operator. Let A = [a,, . . . ,a, ]

We shall call an n vector B an ordered argument vector if each be an ordered argument vector. Let B = [ b,, . . .,b,] be a second

element b, E [0,1] and 6, >, b, if J > I . Given an OWA operator F ordered argument vector such that for each j

with weight vector Wand an argument tuple ( a l , a 2 ; ~ ~ , a ,w)e can associate with this tuple an ordered input vector B such that

a, 2 b,

B is the vector consisting of the arguments of F put in descend- then F(A ) B F( B ) .

ing order. Using this notation then

Proof: Since

F(a,;..,a,) =W’B,

F( A ) =W‘A

and the inner product of W‘ and B. We shall sometimes find it convenient to denote F ( a , ; . .,a,) as F ( B ) where B is the

F( B ) = W‘B

associate ordered argument vector. It is important to emphasize the fact that the weights, the F’s,

the result follows directly from the property aJ b,.

are associated with a particular ordered position rather than a
particular element. That is fl is the weight associated with the
1 th largest element whichever component it is. We note that it can easily be shown that for any ordered
argument vector B and any OWA operator F with weighting vector W that
O<F(B) <l.

Proof: Let A and B be the ordered argument vectors in each

of

these cases. Then We also note that

it can every

easily be shown that operator of this type

eax,hlbbit,.s

the

kind

of symmetry implied by equal importance of criteria.

Theorem: Assume F is an OWA operator. Then

The following simple example illustrates the use of these OWA operators.
Example: Assume F is an ordered weighting averaging operator of size n = 4 with weighting vector,
I Ir0.21
w = ::; L0.41
a) Calculate F(0.6,1,0.3,0.5). In this case the ordered argument vector B is
r 1.01

is any permutation of the elements in (a,, . . .,a,).
Proofi If B and B’ are the ordered argument vectors of ( q ; . . , ~an,d, )( a i , a $ , a A ) respectively then B = B ’ . Hence F( B ) = F( B’).
Thus we see that these operators exhibit the kind of generalized commutativity we desire.
We note one further and perhaps defining property of these OWA operators.
Theorem: All OWA operators are idempotent in the sense that
if a, = a , for all j =1,.. . ,n, then
F( a,, a2,. . ’ a,) = a .

hence
F( 0.6,0.1,0.3,0.5)
[ = F ( B ) =W‘B=[0.2,0.3,0.1,0.4]

It should be noted that the desire to satisfy the condition of symmetry (generalized commutativity) is what forced us to use an “ordered” weighted average rather than simply taking a weighted average. For example, if we defined
n
2 G( 01,. . .,a,,) = ?aJ j =1

= (0.2)(1) +(0.3)(0.6) +(0.1)(5) +(0.3)(0.4) = 0.55

we would not in general get the symmetry condition satisfied. Example: Assume

b) Calculate F(0,0.7,0.1,0.2). Here
r 1.01

G(a,,a,) =0.7ni +0.3a2. If a,=1 and a,=O then
G(1,O) = 0.7

However, if a, = 0 and a2 =1 then

G ( 0 , l ) = 0.3

and therefore

1.o

F ( B ) =[0.2,0.3,0.1,0.4][

=0.43

thus G(1,O) f G(0,l). One special OWA operator worth noting is the pure “averag-
ing” or “mean” operator. In this case = l / n and thus
n
F( B ) = l / n b,.
j=l

Authorized licensed use limited to: University of Electronic Science and Tech of China. Downloaded on May 15,2023 at 04:42:58 UTC from IEEE Xplore. Restrictions apply.

186

IEEE TRANSACTIONSOY SYSTFMS, MAN,AND CYBERNETICS, VOI. 18, luo 1. J A V L I A R Y / F I B R I I A K Y I O X X

ew. We shall denote this as It should be noted that this is the
only case of a “fixed” weighting operator that is also an OWA operator.
We shall now introduce two special weighting vectors associated with OWA operators.
Definition: W, is defined as the weighting vector that has
VI =1 and = 0 for all j f n. W* is defined as the weighting vector which has W,=1 and W,= 0 for all j # 1.
Theorem: Assume B is an arbitrary ordered input vector. Then for any weighting vector W
( W*)’B< W’B < (W*)’B.

Proof: a) (W J B < W‘B

( W,)’B = b,,

n-1
W‘B=EYb,=b,zK,+ yb,.

n

J=1

Since B is an ordered input vector then b, 2 b, for k > j . In
particular bn < b, for j =1,. . . ,n - 1,hence
c W’B 2 b,W, + b, * q , J=2

however

cn -1 y=1-q,,
J=1

thus
W‘B > bnW7+ (1- Wn)b, 2 b,, 2 ( W*)’B
b) ( W*)’B 2 W‘B
( W*)’B = b,
E,, En
W’B = yb, = q b J + b,W,.
J=2
Since b, > b, then
n
W‘B<b,W,+b, q g b , .
J=2

We shall use F* and F* to denote the OWA operator with respectively W* and W, as their weighting vectors. If A =
( a , , a 2 ,. . . ,a,,) is a bag of criteria values, then for any operator
F,
F,( A ) d F( A ) < F*( A ) .
Thus F* and F* provide a lower and upper bound on the aggregation using an ordered weighted average operator.
Theorem: Assume a,, . . . ,an is a collection of numbers each
lying in the unit interval then
F,( a,, . .. ,a,,) = M n J ( a,)
F*( a,, . . . ,an)= M a , ( a, .)
Proof: a) &(a,, . . . ,a,,) = ( W J B = b,,
but b,, = Min, (aJ,)., b) Follows in a similar manner.

Thus the two extreme cases of OWA operators are the “and” and “or” operators. In particular, the largest F operator is the smallest “or” operator, Max, while the smallest F operator is the largest “and” operator, Min.
Assume A = [a,, . . . ,a,,] is a collection of attribute satisfac-
tions. Let T and S be any t and co-t-norms. Let F be any OWA operator, then
T(A)<F(A) <S(A).

Thus F provides an aggregation type operator that always lies between the “and” and the “or” aggregation. This property leads us to think of these OWA operators as a kind of “orand” operator.
A natural question that arises in the formulation of an aggregation function F of the type we have just proposed concerns itself with the issue of obtaining the weights associated with the
weighting vector, the q ’ s . For our purposes we shall consider
that F is a function used to aggregate n criteria. There exists at least two ways that can be used to obtain the
value of the e ’ s . The first approach is to use some kind of learning mechanism. In this approach we use some sample data. arguments and associated aggregated values and try to f i t the weights to this collection of sample data. The process involves the use of some kind of regression model.
A second approach is to try to give some semantics or meaning
to the W’s. Then based upon these semantics we can have the
decisionmaker directly provide the values for the W,’s. T h s approach also will provide some further insight into the meaning of the OWA operators we have just introduced. In the following we shall provide some semantics for the weights.
We shall let
We note that S,, = 1 and So = 0. Assume we have an input vector
of criteria satisfaction B such that b, = 1 for j < K and b, = 0 For
j > K. This indicates that K of the criteria are completely satisfied and the rest are completely unsatisfied. In this situation
E K
F ( B ) = W ’ B = W,=S,.
J=1
Thus S, is the degree of satisfaction the decisionmaker has if he
+ satisfies K / N portion of the criteria. Furthermore since Sh- =
S,-, W, we can interpret W, as the degree of additional (or marginal) satisfaction he gets when we go from satisfaction of K - 1 of the criteria to the satisfaction of K . We note that in this interpretation then the case of = 1/72 corresponds to a linear increase for each increment. From a pragmatic point of view it appears more natural for the decisionmaker to provide the SA function, the degree to which he is happy with k criteria being satisfied. We note that it is easy to obtain the W,’s from the S, ’s since
w, s, = - s h - - 1 >
where So= 0. With this interpretation F, indicates the situation where there
is no satisfaction until all the criteria are satisfied while F* implies complete satisfaction if at least one of the criteria are satisfied.
QUANTIFIEARNSD OWA OPERATORS
Drawing upon Zadeh’s [lo], [Ll] concept of linguistic quantifiers and Yager’s application [l],[2], [12] of this idea to multicriteria decision making we can provide a deeper and more unifying interpretation of the weighting function W associated with an aggregation operator F.
The classic binary logic allows for the representation of two quantifiers, “there exists” and “for all.” In natural language we use many additional quantifiers such as “almost all.” “few,” “many,” “most,” etc. the theory of approximate reasoning [131 extends the binary logic among other ways by allowing for the representation of these linguistic quantifiers. In [LO] Zadeh suggests that quantifiers are of at least two !&ds~- those which say something about the number of elements and those which say something about the proportion of elements. It is also suggested by Zadeh that quantifiers can be represented as fuzz,y subsets of

Authorized licensed use limited to: University of Electronic Science and Tech of China. Downloaded on May 15,2023 at 04:42:58 UTC from IEEE Xplore. Restrictions apply.

~

IEEE TRANSACTIONS ON SYSTEMS, MAN, AND CYBERNETICS, VOL. 18, NO. 1,JANUARY/FEBRUARY 1988

187

either the unit interval or the real line. The distinction is based upon whether the quantifier relates to an absolute or is a proportion type statement. Thus if Q is relative a quantity such as “most,” then Q can be represented as a fuzzy subset of 1 such that for each r E I , Q( r ) indicates the degree to which r portion of the objects satisfies the concept denoted by Q. We note that the quantifier “for all” can be represented as a fuzzy subset of I such that

Q
“and ”

Q(1)= I
Q(r)=O

r+l.

We shall call a quantifier Q monotonically nondecreasing if
ri > r2 + Q ( r i ) 2 Q(r2). Assume we have a decision problem in which we have n
criteria, A , , . . . , A , , , where A , ( x ) indicates the degree to which alternative x satisfies criteria A,. Furthermore, assume in specifying the manner in which these cnteria are to be aggregated to form an overall decision function the decisionmaker states that he desires Q of the criteria be satisfied. In this representation Q is an absolute quantifier definable on the space L [0,n ] . In addition for y E L , Q ( y ) indicates the degree to which the decisionmaker is satisfied with y criteria being solved. We can make the following observations:
1) Q ( O )= 0, the decisionmaker gets absolutely no satisfaction if he gets no criteria satisfied.
2) Q ( n ) = 1,he is completely satisfied if he gets all the criteria satisfied.
3) If rl > r2, then Q ( r , ) 2 Q ( r 2 ) as he gets more criteria satisfied he will not become less satisfied.

One can see that this quantifier function has the same properties as the function of the previous section. Therefore it is our conjecture that the weighing vector W is a manifestation of the quantifier underlying the aggregation process. In particular, if a decisionmaker suggests that they want Q of the objectives satisfied, then we obtain the weighmg vector as W, = Q ( K )- Q( K l), K = l ; . . , n , and Q(O)=O.
On the other hand if the weights are obtained via some kind of learning process, we can conjecture an underlying quantifier Q as

K
Q ( K >= C wi. J =1

The important idea of this section is that the type of OWA operators we have been discussing appear to be manifestations of monotonic quantifiers. We also recall that “and” (for all) operator that corresponds to one of the extremes of these quantifiers has
y,=l
y=O i f n .
In particular
Q..and3(.K ) = 0 k # n

I

Q
“ or ”

I

1

n

! 7

Q
“mean ”

I‘ /

Thus we see that the weights associated with the OWA function determine the kind of ;quantifier it is effecting. By varying the assignment of the weights in W we can move from a Min type, “for all,” quantifier, to a Max type there exists quantifiers. In particular, we can capture aggregations which emulate things like “most” etc. Thus we see that these OWA operators provide
an interesting class of operators.

MEASUREOF “ANDNESS” AND “ORNESS”

Assume F is an OWA operator with weighting function W. If
y,=1 then as we have shown F is a pure “and” operator while
if W, =1,then F is a pure “or” operator. We can further observe the closer all the total weight is to being in W, the closer the F function is to being a pure “or” operator while the closer it is to being all in W, the function is closer to an “and.” We shall here introduce a measure of “orness” associated with a weighting function.
Definition: Assume F is an OWA aggregation operator with
weighing Function W = [W,, .. . ,VI].The degree of “omess”
associated with this operator is defined as

n
orness(W)= ( l / n - ~ ) ( ( n - i ) * w ) .
i=l

Example: a) W = [ l O O O . . . ]

orness ( W ) = 1

b) W = [ O O O . . . l ]

orness ( W ) = O

c) W = ( l / n , l / n , . ‘ . l / n )

n

orness(W) =1/n-1

(n-i)l/n

i=l

Q . . o n d . . ( K )= l .
On the other hand, for the “or” (there exists) quantifier
y=l forj=l y=O f o r j f l ,
therefore, Q..,,..( K ) =1 K > l .
The pure averaging quantifier has
T=l/n forallj=l,...,n,

= (I/n)(I/(n -1))(n - n -( n)( n +1)/2) =1/2.
We can see that this measure of “orness” is defined by
n
“orness”( W )= ( h , (j ) * y ) J-1
where h,, (j ) is a linear type function. That is h,r( j ) = ( n / n -1) - ( j / n -1) = ( n - j ) / ( n -I),
j = 1 , . .. ,n

Authorized licensed use limited to: University of Electronic Science and Tech of China. Downloaded on May 15,2023 at 04:42:58 UTC from IEEE Xplore. Restrictions apply.

188

IEEE TRANSACTIONS ON SYSTEMS, MAN, AND CYBERNETICS, VOL 18, NO 1.JANVARY/FLBRI A R Y 1WX

In point of fact since h , ( i ) > h , ( j ) for J > i then we can see that h,, is really a prototype “linear argument vector.” Thus the measure of “orness” of an OWA operator is its aggregated value under a linear argument vector. It is interesting to point out whatever value n is, h , ( n ) = 0 and h , ( l ) = l . Thus given this type of input any S-norm always evaluates to degree of “orness” equal to 1 and every t-norm to zero “orness.”
We recall that if W = [ W,, . . . W,] then we define
k
Qk= C y , J-1
,. where Q,, =1 and Q , > Q K p Theorem: Assume W and W are two weighting functions such that for each K
QK 2 Qk,
then
“orness(W)”,,“orness”(W’)
Proofi We shall let
K
U(K)=l/n-lC (n-j).y
J -1
K
U’(K)=l/n-l (n-j)?’
j=l
thus orness( W) = U (n ) and orness( W )= U (n ) . We shall first show that if for any K
U ( K ) > U’( K ) , where U ( K ) = U’( K ) + a .
+ + It is impossible for U (K 1)> U’( K 1). + U ( K +1)= U ( K ) (( n - K - 1 ) / ( n -1)) * W,, U( K + 1) = u’(K ) + ( I / ( n - 1 ) ) * ( - K -1) * wk+,.
+ For U‘(K 1 ) > U(K + 1) then w;+,-w,,,= ( n - l ) / ( n - K - l ) * a .
However since it is always required that
QK+I 2 Q ~ + I
then to get this much additional W;+, - WKI1, it must be the case that
Q,-Q;>((n-l)/(n-K-l))*~.
However, if this condition holds true then
U ( K ) - U’( K )
> ( ( T-I ~ ) / ( n - i ) ) * ( ( n - i ) / ( n - K - ~ ) ) * u >U ,
thus this is a contradiction. Furthermore, since
u(1) = w,
U’( 1) = w;,
then since Q ( 1 )= W, and Q’(1) = W{ then
U (1) 2 U’( 1)
This theorem allows us to directly compare quantifiers and tell whether one is mqre of an “or” than another.
We should note that if Q, and Q , are two linguistic quanti-
fiers then we say Q , < Q , if Q , ( x ) < Q , ( x ) for all x.Thus from
the above theorem if Q, and Q , are two quantifiers underlying aggregation functions F, and F, then if Q, < Q , then F2 is a more “orlike” aggregation. In particular, we see that the more

specific the monotone quantifier underlying the aggregation process the more “and” like the aggregation.
We shall define a measure of “andness” associated with an OWA operator as the complement of the “orness” thus “andness”(W) =1-“orness”(W).
Consider two weighmg functions W, and W, where
We note that while both of these weighting functions have the same degree of “orness,” O S , we can see that they are different in the sense that the first one is more volatile and uses less of the input. In order to capture this idea we introduce a measure of “dispersion” associated with a weighting function W .
Definition: Assume W is a weighting vector with elements
W, . . . W, then the measure of dispersion of W is defined as
dispersion( W ) = - W,~nW,
J
We note that since this dispersion is really a measure of entropy and thus the following properties are valid.
1) if = l for some i then the dispersion is minimum and dispersion ( W) = 0
2) the dispersion is maximum if = l / n and in this case dispersion ( W) = In n.
It is interesting to see that this measure of dispersion uses this Shannon information concept, for in a certain sense the more disperse the W the more of the information about the individual criteria is being used in the aggregation of the aggregate value.
Assume Q is the quantifier underlying an aggregation process with a weighting vector W . Since
K
C Q ( K > = y J=1
it appears that the concept of dispersion in the framework of weighting vectors is closely related to the concept of the fuzziness [4] in the underlying quantifier. In particular, a very crisp quantifier such as “for all,” “there exists,” “at least SO percent” tend to have less disperse weighting vectors while fuzzier quantifiers such as many tend to have a more disperse weighting vector.
INA GENERASLETTING It appears that these new OWA operators can be seen as a special family of a more general class of mean-like operators. We can call these generalized means or more descriptively “orand” operators. We shall denote these general operators as R operators and define them as having the following properties:
R:I”+ I such that:
1) R satisfies a generalized commutativity (symmetry)
R ( a,, a, 3 . . . 3 a,) = R ( h , 1 bz 7 ‘ ’ ’ *h,!)
if the bags ( a , , . . .,a,,) and ( b , , . . ., b,,) are equal: 2) R is monotonic;
if u z2 b, for all i =1, 2, n ; 3) R is idempotent. For every a E I ,
R(a,a,a, ’.’,a) = a

Authorized licensed use limited to: University of Electronic Science and Tech of China. Downloaded on May 15,2023 at 04:42:58 UTC from IEEE Xplore. Restrictions apply.

~

ILLE TRANSACTIONS ON SYSTEMS, MAN, A N D CYBERNETICS, VOL. 18, NO. 1, JANUARY/FEBRUARY 1988

189

We note Dubois and Prade [15] looked at binary operators of this type fact that these operators lie between the “and” and “or” operators can be seen by the following theorem.
Theorem: For any R operator
Min( a , , . . . ,a,,) < R ( a , , . . . ,a,,) d Max( q , .. .,a,,)
Proof: a) Assume b = Min(a,, . . ,a,,). By property 3,
R( b,b, ...b ) = b
however since for each i, a, 2 b, then by property 1,
R ( a1,a2; . . , a , , ) a R ( b , . . . , b ) a b
b) follows in a similar manner.
Another family of operators which are members of this general class of R (orand) operators are the generalized means introduced by Dyckhoff & Pedrycz [16], in this case,

Proof: Assume W and W* are two functions taken from
some function Q-.We note that from W we can specify Q( K / n )
for k = l , . . . , n , in particular,

K
Q ( K / n >= WJ
;=1

k =1;.., n.

+ We also note that from W* we can specify - Q ( K / n 1) for + k =1, . . . ,n 1. In particular

K
Q ( K / n + l ) = ?*
;=l

k =1,.. . ,n i-1.

The following observations can be made for any k =1, . . . ,n ,n +1
k / n > k / n + l k=l;.. ,n

and

k+l/n+l>k/n

k = l 2 ..., n - 1

From the monotonicity property of Q we can see that

where p E [ - 0 0 , 0 3 ] .
In the general case of these R operators and in the OWA family in particular the one nice property that is not required, hence not usually available, is the associativity property. The usefulness of t h s property is based upon its ability of helping us easily include additional data. However, as discussed by Dubois & Prade [15] associativity and idempotency don’t usually coexist easily.
BUILDINGCONSISTENOTWA OPERATORS
Assume A , , . . . ,A,, are n criteria having satisfactions
. (I], . . ,a,, under some x . Assume F is some OWA function with weighting vector W, where W = [ W,, . . ,W,]. Thus
n
F ( x ) = TbJ
J-1
where b, equals the j t h biggest element in the bag ( a , , . . . , a r ) .
, Assume A,, is some additional criteria having satisfaction , + a,, under x . Assume we are interested in aggregating the n 1
criteria in a method that is consistent with the aggregation of the
original n criteria. That is we must find some n + 1 order
aggregation function F* and its associated weighting vector
W* = [ W,* , . . . ,W,* , W,*, 1] that is in some sense consistent with
F and its W. We shall say W and W* are q-consistent if three exists some
monotonic quantifier on the unit interval such that W and W* could have been drawn from this same quantifier.
We recall that Q is a monotonic type quantifier if:

1) Q(1) = I ;
2) Q ( 0 )= 0; 3) Q ( r , ) 2 Q ( r z )forall r l , r , E I where r 1 > r 2

Theorem: Two weighting vectors W and W* of size n and m respectively are q-consistent if

K

k

1) W,a T*

J-1

J-1

K

k sl

k = l > . . . 9 n’,

I1

ntl

3) q = q*=1.

J=1

J=1

Q( k / n ) 2 Q( k / n +1)

Q ( k + l / n +1) a Q( k / n ) .

Example: Assume we have W = [1,0] a pure “or” operator. Consider W*= [0,0,1] a “pure and.” Are they q-consistent? The requirements are:

1) w,a w,*;

2) 3) 4)

w, + w,< w, +

ww,,*a+ww,,**;+ w,= w,* +

w,*; w2*

+

w,*.

We note that condition 3 fails to hold since 1> 010.

+ A necessary condition for W* to be q-consistent with W is that
W,* W2*=l.Thus W* = [ a , l - a,O] is q-consistent.
+ Given an n dimension vector W one can set up as a linear
programming problem that of finding the n 1 vector W* that is q-consistent with W and is the most “orlike” or “andlike.” Here our objective function would involve use of our measure of “orness.”

INCLUDINGUNEQUAILMPORTANCES
Implicit in our methodology for aggregating criteria is the assumption that all criteria are of equal importance to the decisionmaker. In some cases the decision maker may assign differing degrees of importance to each of the criteria. In this section we shall suggest a scheme for including the ability to handle different importances in OWA operators. We note that in [17]-[21] we looked at issues related to importance.
Assume F is an OWA operator with weighting vector W.
Assume A,, 1 =1,2, . . . ,n , are a collection of criteria. Assume for
each criteria a, E I indicates the degree of importance associated with the criteria. For each criteria, let A , ( x ) E I be the degree of satisfaction to criteria i. In this situation then our overall decision function evaluated at x is
F(x) =F(U~;..,U,)

where
a, = H ( A, ( x ),a,) is the effective satisfaction to criteria A , .

We further recall if b, is the kth largest element in the bag
(q,... ,a,,) then

n

F(X)=

bk*W,.

K=l

Authorized licensed use limited to: University of Electronic Science and Tech of China. Downloaded on May 15,2023 at 04:42:58 UTC from IEEE Xplore. Restrictions apply.

190

IEEE TRANSACTIONS O N SYSTEMS, MAN, AND CYBERNETICS, VOL. 18, NO 1,J A N I J A R Y / F L B R U A K Y 19x8

One possible form of the function H is
+ In the above formula q is the degree of “omess” associated with
the weighting function W and p is its complement p q =1,the degree of “andness” associated with W. We first note if p =1 and q = 0, F is a pure “and” operator, then a, = A, (x)”.
Thus in this pure “and” environment, since W, =1, then
This is in complete agreement with the original method for including importances suggested by Yager [17]. On the other hand if we have a pure “or” then p = 0 and q =1 and W, =1 thus
a, = a , A , ( x ) and

-, “ A computational theory of dispositions,” int J . Intulliqenf S u r . . vol. 2, pp. 39-64, 1987. R. R. Yager, “Quantified propositions in a linguistic logic.” In! J
Man-Machine Studies, vol. 19, pp. 195-227. 1983. L. A. Zadeh, “A theory of approximate reasoning.” in Mochfric Inrrll , vol. 9, J. E. Hayes, D. Michie and L. I. Kulich. pp. 149-194. New York. Wiley, 1979. A. DeLuca and S. Termini, “A definition of non-probabililic entropy
the setting of fuzzy sets theory,” In/orm., vol 20, pp 301-312. 1972 D. Dubois and H. Prade, “Fuzzy set aggregation connectives,” ln/hrm Sci., vols. 1-2, pp. 85-122, 1985. H. Dyckhoff and W. Pedryn, “Generalized means as models of comprchensive connectives,” Fuzzy Sets and Syst., vol. 14, pp 143- 154. 19x4 R. R. Yager, “Fuzzy decision making including unequal objectives,” Furzy Sets und Syst., vol. 1, pp. 87-89, 1978. -, “ A linguistic variable for importance,” J Cvhrm.. vol. IO. pp
249-260, 1980. -, “ A new methodology for ordinal multiple aspect decision making based on fuzzy sets,” Decision Sci., vol. 12, pp. 589-600, 1YXl. -, “General multiple objective decision making and linguistically
quantified statements,” Int. J . Man- Machine Studies, vol. 21. pp
389-400, 1984. -, “ A note on weighted queries in information retrieval systems.” J Amer. Soc. Inform. Sci., vol. 38, pp. 23-24, 1987.

which agrees with the approach suggested in [217. We also note that if importance of A, is one, a, =1,then a, = A,(x) and if all importances are one we get the form suggested earlier.
CONCLUSION
We have introduced a new class of operators that are useful for aggregating criteria guided by quantifiers.
REFERENCES
R. R. Yager, “Quantifiers in the formulation of multiple objective decision functions,” Inform. Sci., vol. 31, pp. 107-139, 1983. -, “Aggregating evidence using quantified statements,” Inform. Sci., vol. 36, pp. 179-206, 1985. ~, “ O n the theory of bags,” Int. J . Gen. Syst., vol. 13, pp. 23-37, 1986. D. Dubois, “Triangular norms for fuzzy sets,” in Proc. 2nd Int. Seminar on Fuzzy Set Theory, Linz, Austria, 1980, pp. 39-68. E. P. Klement, “Construction of fuzzy g-algebras using triangular norms.” J . Muth. A n d . Appl., vol. 85, pp. 543-566, 1982. K. Menger, “Statistical metrics,” Proc. Nut. Acud. Sci. U . S . A . ,vol. 28, pp. 535-537, 1942. R. R. Yager, “On a general class of fuzzy connectives,” Furzy Sets und Syst., vol. 4. pp. 235-242, 1980, P. P. Bonissone and K. S . Decker, “Selecting uncertainty calculi and granularity: An experiment in trading off precision and complexity,” in Uncertainty in Artificial Intelligence, L. N. Kanal and J. F. Lemmer, Eds. pp. 217-248. Amsterdam: North-Holland, 1986. R. R. Yager, “Some procedures for selecting fuzzy set-theoretic operators,’’ Int. J . Gen. Syst., vol. 8, pp. 115-124, 1982. L. A. Zadeh, “ A computational approach to fuzzy quantifiers in natural languages,” Comps. & Muths. with Appls., vol. 9, pp. 149-184, 1983.

Correction to “Learning Optimal Discriminant Functions Through
a Cooperative Game of Automata”
MANDAYAM A. L. THATHACHAR, SENIOR .MEMBER, IELE.
s. AND P. SASTRY, MEMBER, IEEE
In the above paper,’ equation (13) should have read
Manuscript received November 23, 1987. The authors are with Department of Electrical Engineenng. Indian fnstitrrte of Science, Bangalore, 560012, India. IEEE Log Number 8719231. ‘M. A. L. Thathachar and P. S . Sastry. IEEE Trans. Syst., Man. Cyhern, vol. SMC-17. no. 1,pp. 73-85. Jan./Feb. 1987.

0018-9472/88/0100-0190$01.00 01988 IEEE
Authorized licensed use limited to: University of Electronic Science and Tech of China. Downloaded on May 15,2023 at 04:42:58 UTC from IEEE Xplore. Restrictions apply.

